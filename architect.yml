name: springbootemplate
description: |
  An example Architect component that uses Spring Boot to serve the API and
  Hibernate to connect to an auto-provisioned PostgreSQL database.
keywords:
  - java
  - spring
  - hibernate
  - postgresql
  - microservice
secrets:
  database_name:
    default: default_db
  database_user:
    default: default_user
  database_password:
    default: default_pw
services:
  app:
    build:
      context: .
    interfaces:
      main:
        port: 3000
        ingress:
          subdomain: app
    environment:
      SPRING_PORT: 3000
      APP_URL: '${{ services.app.interfaces.main.ingress.url }}'
      POSTGRES_USERNAME: '${{ secrets.database_user }}'
      POSTGRES_PASSWORD: '${{ secrets.database_password }}'
      POSTGRES_URL: >-
        jdbc:postgresql://${{ services.database.interfaces.main.host }}:${{
        services.database.interfaces.main.port }}/${{ secrets.database_name }}
      ENVIRONMENT: prod
    depends_on:
      - database
    liveness_probe:
      path: /health
      port: 3000
      interval: 10s
      initial_delay: 30s
      command: 'mvn spring-boot:run -Dspring.devtools.restart.enabled=true'
      volumes:
        src:
          host_path: ./src
          mount_path: /opt/code/src
        target:
          host_path: ./target
          mount_path: /opt/code/target
      environment:
        ENVIRONMENT: dev
  database:
    image: 'postgres:14'
    environment:
      POSTGRES_DB: '${{ secrets.database_name }}'
      POSTGRES_USER: '${{ secrets.database_user }}'
      POSTGRES_PASSWORD: '${{ secrets.database_password }}'
    interfaces:
      main:
        port: 5432
        protocol: postgresql
        username: '${{ secrets.database_user }}'
        password: '${{ secrets.database_password }}'
        path: '/${{ secrets.database_name }}'
    liveness_probe:
      command: >-
        pg_isready -d ${{ secrets.database_name }} -U ${{ secrets.database_user
        }}
      interval: 10s
      failure_threshold: 3
